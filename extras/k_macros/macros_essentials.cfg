[gcode_macro TEMP_CHECK]
description: Check temperature on the nozzle, heat the nozzle if needed 
gcode: 
    {% set T = params.T|default(200)|float %}
    {% set garantee = params.G|default(0)|float %}
    {% if printer.extruder.target !=0 and garantee == 1 %}
      {% if printer.extruder.temperature < printer.extruder.target %}
        M109 S{printer.extruder.target|float}
        {action_respond_info("Waiting to reach target temperature: %d."%(printer.extruder.target|float))}
      {% endif %}
    {% else %}
      {% if printer.extruder.target < T %}
        M109 S{T}
      {% endif %}
    {% endif %}
    {% if garantee == 1 %}
      M109 S{T}
    {% endif %}

#######################################################################################
[gcode_macro GO_TO_BUCKET]
gcode: 
    RESTORE_DEFAULT_BOUNDARY 
    G90
    G1 X-20 Y80 F12000
    M400
    SET_CUSTOM_BOUNDARY MOTE_TO_PARK=False 

#######################################################################################

[gcode_macro HOME_IF_NEEDED]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
    
#######################################################################################

[gcode_macro CLEAN_NOZZLE]
variable_start_x: -20
variable_start_y: 80
variable_start_y_2: 100
variable_wipe_dist: 20
variable_wipe_dist_2: 45
variable_wipe_qty: 8
variable_wipe_spd: 500
variable_raise_distance: 20

gcode:
    #TODO: Reagir consoante o filamento introduzido 
    RESTORE_DEFAULT_BOUNDARY
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=190
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM=190
    G90                                            ; absolute positioning
    ## Move nozzle to start position
    G1 X{start_x-(start_x)} Y{start_y} F12000
    G1 X{start_x} Y{start_y} F12000


    ## Wipe nozzle
    {% for wipes in range(1, (wipe_qty + 1)) %}
      G1 X{start_x} Y{start_y + wipe_dist} F{wipe_spd * 60}
      G1 Y{start_y} F{wipe_spd * 60}
    {% endfor %}
    {% for wipes in range(1, (wipe_qty + 1)) %}
      G1 X{start_x} Y{start_y_2 + wipe_dist_2} F{wipe_spd * 60}
      G1 Y{start_y_2} F{wipe_spd * 60}
    {% endfor %}
    G92 E0
    G1 E-1
    G92 E0

    SET_CUSTOM_BOUNDARY MOVE_TO_PARK=False
    M400 #Wait for movements to finish 
 
#######################################################################################

[gcode_macro PRIME_EXTRUDER]
# Do nozzle priming
gcode:
    RESTORE_DEFAULT_BOUNDARY 

    M117 Priming
    G92 E0
    G1 X-3 Y10 F18000
    G1 Z1.0 F600
    G1 X-3 Y200 Z0.3 F2400.0 E20; Draw the first line
    G1 X-2.6 Y200 Z0.3 F4800.0; Move to the side a little
    G1 X-2.6 Y10.0 Z0.3 F2400.0 E40; Draw the second line
    G92 E0 
    G1 F2400 E-0.7 # Small retract to remove pressure
    G1 Z2.0 F600 ;Move Z Axis up
    SET_CUSTOM_BOUNDARY MOVE_TO_PARK=False
    

#######################################################################################

[gcode_macro PRINT_START]
description: Machine Print start macro.
variable_bed_temperature:0  
variable_extruder_temperature:0
#variable_material_type: "XXX"
gcode:
    #TODO: Messages are always displayed instantly, need to conditionally send the messages, or else the temperature messages will be displayed and sent all at the same time 


    {% set BED = params.BED| default(60) |int %}
    {% set EXTRUDER = params.EXTRUDER| default(190) | int %}

    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=bed_temperature VALUE={BED}
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=extruder_temperature VALUE={EXTRUDER}
    
    CLEAR_PAUSE
    # Set the belay to desired values 
    #BELAY_SET_MULTIPLIER BELAY=belay_extruder HIGH=1.1 LOW=0.90
    RESPOND MSG="Starting print...."
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED}    ; set bed temp
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=190       ; set nozzle temp for any filament
    {action_respond_info("Heating extruder to 190ºC")}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM=190         
    RESPOND MSG="Homing..."
    G21          ; set to mm
    M220 S100	 ; set print speed to 100%
    M221 S100	 ; set flow rate to 100%
    M107         ; disable fans
    G90          ; absolute positioning
    HOME_IF_NEEDED
  
    
    RESPOND MSG="Leveling gantry..."
    #QUAD_GANTRY_LEVEL
    Z_TILT_ADJUST
    RESPOND MSG="Cleaning nozzle..."
    CLEAN_NOZZLE
    G28 Z

    M400  ## Wait for moves to finish 

    {action_respond_info("Heating bed to %dºC" % (BED))}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED}    ; wait for bed temp         
    
    RESPOND MSG="Building mesh."
    BED_MESH_CALIBRATE
    
    {action_respond_info("Heating extruder to %dºC" % (EXTRUDER))}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER} ; wait for extruder temp
    #SET_FILAMENT_SENSOR SENSOR=ToolHeadFilamentSensor ENABLE=1
    #SET_FILAMENT_SENSOR SENSOR=Spool_filament_sensor ENABLE=1
    
    M117 Purge Line
    RESPOND MSG="Purge Line"
    M83                                                 ; extruder to relative mode
    G92 E0                                              ; Reset extruder
    PRIME_EXTRUDER
    G92 E0
    M400		                                ; clear buffer
    M117 Printing
    RESPOND MSG="Printing."
#######################################################################################
      
[gcode_macro CANCEL_PRINT]
description: Cancel a running print job. 
rename_existing: BASE_CANCEL_PRINT
gcode: 
  {% set park_x = printer.toolhead.axis_minimum.x |default(100)|int %}
  {% set park_y = printer.toolhead.axis_minimum.y + 1|default(0)|int %}
  {% set current_print_z = printer.gcode_move.position.z|float %}
  # Raise z axis so to not hit the printed piece.
  # And Get how much we can raise the z axis without hitting the z maximum

  {% if ((current_print_z + 15) <= (printer.toolhead.axis_maximum.z )) %}
    {action_respond_info("Raising z height by 15")}
    G91
    G1 Z15 F900
  {% else %}
    G91
    G1 Z{printer.toolhead.axis_maximum.z - current_print_z} F900
    {action_respond_info("Raising z height by %d"%(printer.toolhead.axis.maximum.z - current_print_z))}
  {% endif %}
  # Move the toolhead to the defined park positions 
  G90
  G1 X{park_x} Y{park_y} F12000
  # If a cancel is made after a pause print, we need to clear the pause.
  CLEAR_PAUSE
  SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
  SDCARD_RESET_FILE
  SET_FILAMENT_SENSOR SENSOR=ToolHeadFilamentSensor ENABLE=0
  SET_FILAMENT_SENSOR SENSOR=Spool_filament_sensor ENABLE=0
  BASE_CANCEL_PRINT
  DISABLE_ALL 
  M104 S0 
  M140 S0
  
#######################################################################################

[gcode_macro PRINT_END]
gcode:
    
    # Retract a little bit 
    G91
    G1 E-2 F1800
    # Move with abosilute positions
    G90                                   # Absolute positioning 
    # Raise the toohead
    G1 Z{ printer.gcode_move.position.z + 2 if (printer.gcode_move.position.z + 2 ) <= (printer.toolhead.axis_maximum.z) else 0 } F1300
  
    G1 X0 Y1000 F12000
    # Turn off bed, extruder, and fan
    SET_FILAMENT_SENSOR SENSOR=ToolHeadFilamentSensor ENABLE=0
    SET_FILAMENT_SENSOR SENSOR=Spool_filament_sensor ENABLE=0

    BELAY_SET_MULTIPLIER BELAY=belay_extruder HIGH=1.0 LOW=1.0
    
    M140 S0
    M104 S0
    M106 S0
    # Disable steppers and others
    DISABLE_ALL
    M117 Print complete
    REPSOND MSG="Print complete"

######################################################################################


######################################################################################
######################################################################################
###################################LOAD/UNLOAD########################################
######################################################################################
######################################################################################
# START HEATING ON THE BEGGINING ONLY WAIT WHEN THE FILAMENT IS AT THE TOOLHEAD EXTRUDER 

[gcode_macro LOAD_FILAMENT]
description: Loads filament.
gcode:
  {% set speed = params.SPEED|default(600)|int %}
  RESPOND MSG="Heating the extruder for loading."
  HOME_IF_NEEDED
  
  {action_respond_info("Loading Filament")}



  SAVE_VARIABLE VARIABLE=loading VALUE=True
  
  SAVE_GCODE_STATE NAME=LOAD_FILAMENT_state 
  # Control variable to indicate that we are on a loading prodedure
  RESTORE_DEFAULT_BOUNDARY 
  GO_TO_BUCKET
  M400

  # Check nozzle temperature 
  TEMP_CHECK T=250
  
  RESPOND MSG="Loading...."
  G91
  G92 E0
  
  FORCE_MOVE STEPPER="extruder_stepper feeder_extruder" VELOCITY=100 DISTANCE=1050

  # * Extrude until it its the filament cutter sensor 
  G1 E38 F900
  

  # G1 E50 F9i00
  G1 E20 F300
  G1 E30 F120
  G1 E30 F120


  #SET_FILAMENT_SENSOR SENSOR=ToolHeadFilamentSensor ENABLE=1
  #SET_FILAMENT_SENSOR SENSOR=Spool_filament_sensor ENABLE=1
  # dwell for 5 seconds  
  G4 P5000
  
  G92 E0
 
  M400
  
  RESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state 
  
  # * Enable filament sensors again 

  #SET_FILAMENT_SENSOR SENSOR=Spool_filament_sensor ENABLE=0
  #SET_FILAMENT_SENSOR SENSOR=ToolHeadFilamentSensor ENABLE=0
  SET_CUSTOM_BOUNDARY MOVE_TO_PARK=False
  
  M104 S0
  SAVE_VARIABLE VARIABLE=loading VALUE=False
######################################################################################

[gcode_macro UNLOAD_FILAMENT]
description: Unload the filament 
gcode:
  {% set speed = params.SPEED|default(100)|int %}
  {% set temp = params.TEMP|default(220)|int %}
  {action_respond_info("Unloading Filament")}
  # Control vairable to indicate that we are in an unloading procedure 
  SAVE_VARIABLE VARIABLE=unloading VALUE=True
  # Disable the filament motion sensor for 
  #SET_FILAMENT_SENSOR SENSOR=ToolHeadFilamentSensor ENABLE=0
  #SET_FILAMENT_SENSOR SENSOR=Spool_filament_sensor ENABLE=0
  #check the nozzle temperature 
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp}
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp}
  #TEMP_CHECK T=250
  HOME_IF_NEEDED
  M400
  SAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state 
  RESTORE_DEFAULT_BOUNDARY 
  # Make the movements for unloading save previous state first 
  CUT TEMP={temp} SENSOR=extruder_cutter MOTE_TO_LAST_POS=False TURN_OFF_HEATER=False
  M400
  
  
  G91
  G92 E0
#  G1 E30 F480
  G1 E-100 F2000
  G4 P5000

  FORCE_MOVE STEPPER="extruder_stepper feeder_extruder" VELOCITY=100 DISTANCE=-1300
  
  #Flush klippers buffer to ensure the unload is done before continuing 
  M400
  G92 E0
  
  RESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state 

  #SET_FILAMENT_SENSOR SENSOR=ToolHeadFilamentSensor ENABLE=1
  #SET_FILAMENT_SENSOR SENSOR=Spool_filament_sensor ENABLE=1
  #Disable the temperature after the unloading 
  SET_CUSTOM_BOUNDARY MOVE_TO_PARK=False
  M104 S0



######################################################################################
######################################################################################
######################################################################################
